name: "Eval"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  changes:
    name: Package Changes
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.changes.outputs.src }}
      wranglerLatest: ${{ steps.changes.outputs.wranglerLatest }}
      wrangler3: ${{ steps.changes.outputs.wrangler3 }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - 'pkgs/wrangler/generic.nix'
            wranglerLatest:
              - 'pkgs/wrangler/4_x.nix'
            wrangler3:
              - 'pkgs/wrangler/3_x.nix'
  nixExprs:
    name: Nix Exprs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Check
        run: nix flake check -L --no-build
  format:
    name: Format
    needs: nixExprs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Check formatting
        run: nix fmt -- -c .
  devShelldefault:
    name: 'devShells / Build default'
    needs: nixExprs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Build
        run: nix build .#devShells.x86_64-linux.default
  packagesWrangler:
    strategy:
      matrix:
        include:
          - name: x86_64-linux
            os: ubuntu-latest
          - name: aarch64-linux
            os: ubuntu-24.04-arm
          - name: aarch64-darwin
            os: macos-latest
          - name: x86_64-darwin
            os: macos-13

    name: 'Packages / Build and check wrangler'
    needs:
      - changes
      - nixExprs
    if: ${{ needs.changes.outputs.src == 'true' || needs.changes.outputs.wranglerLatest == 'true' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - uses: cachix/cachix-action@v16
        with:
          name: wrangler
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: ${{ github.event_name == 'pull_request' }}
      - name: Build
        run: nix build .#packages.${{ matrix.name }}.wrangler
      - name: Version check
        run: ./result/bin/wrangler -v

  packagesWrangler3:
    strategy:
      matrix:
        include:
          - name: x86_64-linux
            os: ubuntu-latest
          - name: aarch64-linux
            os: ubuntu-24.04-arm
          - name: aarch64-darwin
            os: macos-latest
          - name: x86_64-darwin
            os: macos-13

    name: 'Packages / Build and check wrangler (v3)'
    needs:
      - changes
      - nixExprs
    if: ${{ needs.changes.outputs.src == 'true' || needs.changes.outputs.wrangler3 == 'true' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Build
        run: nix build .#packages.${{ matrix.name }}.wrangler_3
      - name: Version check
        run: ./result/bin/wrangler -v
